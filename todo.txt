https://storage.googleapis.com/code.getmdl.io/1.0.6/material.green-amber.min.css

1. Обновление и удаление комнаты на стороне сервера и клиента не сделано...
2. Проверка выполнения операций на соответствие роли пользователя.
Нет процесса регистрации.. Его нужно сделать

При отправке приглашений в комнату нет проверки на то, что такое приглашение уже есть...
При принятии приглашения нет проверки на то, что пользователь уже есть в комнате


3. Работа с сообщениями - вообще ничего нет. Даже идеи.
Вопросы.
при первом входе в систему(после авторизации) показывать
   -- для незарегистрированных пользователей - последние 10 сообщений из беседы, куда вступил пользователь.
   -- для зарегистрированных пользователей - после вступления в беседу - последние 10 сообщений, если пользователь
  уже был в беседе, то только непрочитанные сообщения.
далее делаем long-polling на получение сообщений для всех комнат, в которых состоит пользователь...
-- необходимо как-то понимать, что сообщение для пользователя новое.. Возможно по дате последнего request на список сообщений

Сама отправка сообщения с клиента.

4. Таймер на отметку незарегистрированных пользователей как удаленных. Если последний запрос от пользователя был очень давно,
то необходимо отметить пользователя как удаленного. И удалить его из списка авторизованных.
Плюс для зарегистрированных пользователей - удалять из списка авторизованных???

5. Работа с дизайном приложения. Возможно добавить к bootstrap фреймворк от google material

Ответы
1.На сервере сделать проверку. В чем сложность-то?
Если пользователь уже в комнате, то не нужно его туда еще раз засовывать.
Если есть приглашение, то не нужно отправлять второе. Если он в комнате,
то не нужно генерировать приглашение...
  Думаю, понятно.

2.Твой вариант хорош. Слабое место только в определении последнего прочитанного сообщения.
Я бы потенциально мог предложить более совершенный вариант. Но вот, к примеру вконтакте или
facebook работает согласно твоему принципу и это не помешало им стать 100 миллионым и миллирадным сайтами.

Так что делай так.

3. Да, все так. Молодец) - по пункту 4

4.Ну, во-первых, стоит отправлять не список логинов, а список id пользователей:
  public HttpEntity<String> send(@PathVariable("roomId") int roomId, @RequestBody List<int> userIds)
  Поскольку мы учимся писать сервера, то отвечать сервер должен максимально правильно:
  201ОК, поскольку запрос он выполнил и никаких ошибок не произошло, но кроме кода ответа, есть еще и тело ответа:
  invitatedUsers: массив id пользователей
  alreadyInvitatedUser: массив id пользователей, по которым уже были приглашения
  alreadyInRoomUsers: массив id пользователей, которые уже присутствуют в данной комнате.

  Я уже ответил на вопрос, а здесь дам пояснения. С точки зрения пользователя его задача выполнена,
  те, кому он отправил приглашения будут в группе или же будут в нее приглашены.
  Если бы мы делали соц сеть, то возможно, мы бы заменили приглашения на личное сообщение,
  о том, что такой-то пользователь пригласил вас в такую-то группу, но вы в нее уже приглашены
  или вы уже в ней. Но ничего этого не нужно))
